name: Deploy to Google Cloud

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Choose one authentication method:
      # 1) JSON key (simple): set secrets.GCP_SA_KEY
      - name: Authenticate to Google Cloud
        if: ${{ secrets.GCP_SA_KEY != '' }}
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      # 2) Workload Identity Federation (preferred): set secrets.WIF_PROVIDER and secrets.DEPLOY_SA
      - name: Authenticate to Google Cloud (WIF)
        if: ${{ secrets.GCP_SA_KEY == '' }}
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
          service_account: ${{ secrets.DEPLOY_SA }}

      - name: Set up gcloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Check required secrets
        shell: bash
        run: |
          req=(GCP_PROJECT_ID GCP_REGION)
          missing=()
          for k in "${req[@]}"; do
            [[ -n "${!k}" ]] || missing+=("$k")
          done
          if [[ ${#missing[@]} -gt 0 ]]; then
            echo "Missing required secrets: ${missing[*]}" >&2
            exit 1
          fi
        env:
          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          GCP_REGION: ${{ secrets.GCP_REGION }}

      - name: Install deploy-time Python deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Deploy Cloud Functions (Gen 2)
        shell: bash
        run: |
          set -euo pipefail
          REGION="${{ secrets.GCP_REGION }}"
          PROJECT="${{ secrets.GCP_PROJECT_ID }}"

          gcf_deploy() {
            local NAME="$1" SRC="$2"
            gcloud functions deploy "$NAME" \
              --gen2 \
              --runtime python311 \
              --trigger-http \
              --entry-point handle \
              --source "$SRC" \
              --region "$REGION" \
              --project "$PROJECT" \
              --no-allow-unauthenticated
          }

          gcf_deploy scriptwriter functions/scriptwriter

          gcloud functions deploy media-sourcing \
            --gen2 \
            --runtime python311 \
            --trigger-http \
            --entry-point handle \
            --source functions/media_sourcing \
            --region "$REGION" \
            --project "$PROJECT" \
            --no-allow-unauthenticated \
            --set-env-vars "GCS_BUCKET=${{ secrets.GCS_BUCKET }},PEXELS_API_KEY=${{ secrets.PEXELS_API_KEY }}"

          gcf_deploy narrator functions/narrator
          gcf_deploy video-assembly functions/video_assembly
          gcf_deploy uploader functions/uploader

      - name: Deploy Workflow
        if: ${{ success() && secrets.WORKFLOW_NAME != '' }}
        run: |
          gcloud workflows deploy "${{ secrets.WORKFLOW_NAME }}" \
            --source workflow.yaml \
            --location "${{ secrets.GCP_REGION }}" \
            --service-account "${{ secrets.WF_SERVICE_ACCOUNT }}"