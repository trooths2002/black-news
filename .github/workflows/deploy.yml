name: Deploy to Google Cloud

# This GitHub Actions workflow deploys the Cloud Functions and Workflow
# whenever code is pushed to the `main` branch.  It uses a service
# account key stored as a GitHub secret to authenticate with GCP.

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # 1. Check out the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Set up the Google Cloud SDK.  The service account key
      # should be stored in the repository's secrets as GCP_SA_KEY.
      - name: Set up GCP credentials
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      # 3. Install Python dependencies needed for deployment.  This is
      # optional if your functions include their own dependencies via
      # individual requirements.txt files.
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # 4. Deploy each Cloud Function.  Replace the `--set-env-vars` values
      # with the appropriate environment variables (e.g. API keys, bucket names).
      - name: Deploy Cloud Functions
        run: |
          # Deploy the scriptwriter function
          gcloud functions deploy scriptwriter \
            --runtime python311 \
            --trigger-http \
            --entry-point handle \
            --source functions/scriptwriter \
            --region ${{ secrets.GCP_REGION }} \
            --no-allow-unauthenticated \
            --set-env-vars GOOGLE_CLOUD_PROJECT=${{ secrets.GCP_PROJECT_ID }}

          # Deploy the media sourcing function
          gcloud functions deploy media-sourcing \
            --runtime python311 \
            --trigger-http \
            --entry-point handle \
            --source functions/media_sourcing \
            --region ${{ secrets.GCP_REGION }} \
            --no-allow-unauthenticated \
            --set-env-vars GCS_BUCKET=${{ secrets.GCS_BUCKET }},PEXELS_API_KEY=${{ secrets.PEXELS_API_KEY }}

          # Deploy the narrator function
          gcloud functions deploy narrator \
            --runtime python311 \
            --trigger-http \
            --entry-point handle \
            --source functions/narrator \
            --region ${{ secrets.GCP_REGION }} \
            --no-allow-unauthenticated

          # Deploy the video assembly function
          gcloud functions deploy video-assembly \
            --runtime python311 \
            --trigger-http \
            --entry-point handle \
            --source functions/video_assembly \
            --region ${{ secrets.GCP_REGION }} \
            --no-allow-unauthenticated

          # Deploy the uploader function
          gcloud functions deploy uploader \
            --runtime python311 \
            --trigger-http \
            --entry-point handle \
            --source functions/uploader \
            --region ${{ secrets.GCP_REGION }} \
            --no-allow-unauthenticated

      # 5. Deploy the workflow.  This step assumes youâ€™ve already
      # updated `workflow.yaml` with the deployed function URLs.
      - name: Deploy Workflow
        run: |
          gcloud workflows deploy ${{ secrets.WORKFLOW_NAME }} \
            --source workflow.yaml \
            --location ${{ secrets.GCP_REGION }} \
            --service-account ${{ secrets.WF_SERVICE_ACCOUNT }}